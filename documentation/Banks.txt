My goal is to create a minimal NES game using minimal hardware. If this goal
succeeds, I will explore using more powerful hardware / larger ROMs.
    * 64kb rom.
    * MMC1 or Action 53 mapper.

Mapper: 1 (MMC1)
PRGROM: 0.5mbit / 64kb (4x16kb)
PRGRAM: 8kb, battery backed
CHRROM: n/a
CHRRAM: 8kb

8000 - 16kb swappable bank, used for data, graphics, music, and engine code.
C000 - 16kb fixed bank, used for DPCM, data headers, and core code.

BANK    ADDR    SIZE    DESCRIPTION
00      8000     200    Map pointers: 16 x 16 x 2b superchunk pointers.
        8200    1E00    Map chunk data: actors and egg scripts.
        A000    1000    Sprite data
        B000    1000    Actor scripts

01      8000    2000    Chunks
        A000    1000    TileGfx Page 0 (256 tiles) * NOTE - if moving this data, must also change TileGfxAddressHi.
        B000    1000    TileGfx Page 1 (256 tiles) * NOTE2 - expanding to more than 4 pages will require edit to SprLdr_Update and map tileset loading algorithms.
        
02      8000    2000    Famitone Song 0
        A000    2000    Famitone Song 1

03      C000    1000    DPCM reserved space (4kb)
        D000     800    SFX reserved space (2kb)    
        D800     600    Tileset 00 - in a larger game, would go into 'tileset' or 'data' bank.
        DE00      80    Sprite Headers (4b ea, 32 total).
        DE80      80    Actor Headers (8b ea, 16 total).
        DF00      20    Map Headers (4b ea, 8 total).
        DF20      E0    Palettes (224b, 3b ea, 74 total + 2b)
        E000    2000    Kernel Code

		

Hypothetical MMC3 mapper banks
8000 - 2000b    fixed       kernel1.
A000 - 2000b    swappable   data, graphics (512 tiles per bank), music, and engines.
C000 - 2000b    swappable   dpcm samples
E000 - 2000b    fixed       kernal0.